# 1 Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их
# деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на
# ноль.

def delenie(num1 , num2):
    try:
        return num1 / num2
    except ZeroDivisionError:
        print('на ноль делить нельзя ')
a = int(input('число 1:  '))
b = int(input('число 2:  '))
print ('результат деления: ', delenie(a, b))

# 2 Выполнить функцию, которая принимает несколько параметров, описывающих данные
# пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция
# должна принимать параметры как именованные аргументы. Осуществить вывод данных о
# пользователе одной строкой.

def full_inf (name, lastname, year, city, email, phone):
    return print(f'{name} {lastname} , {year} года рождения, Проживает: {city} , Email: {email} , Телефон: {phone}')

full_inf(
    name = input('Имя: '),
    lastname = input('Фамилия: '),
    year = input('Год Рождения: '),
    city = input('Город проживания: '),
    email = input('email: '),
    phone = input('phone: '),
)

# 3 Реализовать функцию my_func(), которая принимает три позиционных аргумента и
# возвращает сумму наибольших двух аргументов.

def maxim (num1, num2, num3):
    print(f'Сумма двух макс. чисел: {num1+num2+num3 - min(num1, num2, num3)}')
maxim(
    int(input("число 1: ")),
    int(input("число 2: ")),
    int(input("число 3: ")),
)

# 4 Программа принимает действительное положительное число x и целое отрицательное число
# y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции
# my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения
# числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с
# помощью оператора **. Второй — более сложная реализация без оператора **,
# предусматривающая использование цикла.
# вариант 1
def my_func(x,y):
    return print(x ** y)
my_func(
    int(input('Положительное число: ')),
    int(input('Отрицательное число: ')),
)
# вариант 2

def my_func_2(x,y):
    counter = 1
    result = 1 / x
    while counter < abs(y):
        result = result * (1 / x)
        counter += 1
    return result

print(f'{my_func_2(int(input("Положительное число: ")), int(input("число возведения в отрицательную степень: ")))}')

# 5 Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии
# Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет
# добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму
# этих чисел к полученной ранее сумме и после этого завершить программу.

def calculate_sum(*args):
    sum = 0
    flag = False
    for num in args:
        try:
            if num:
                sum += float(num)
        except ValueError:
            flag = True
    return sum, flag

general_sum = 0

while True:
    numbers_string = input('Введите числа через пробел: ').split(' ')
    sum, stop_flag = calculate_sum(*numbers_string)
    general_sum += sum
    print(f'сумма {general_sum}')

    if stop_flag:
        break

# Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и
# возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых
# пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод
# исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте
# написанную ранее функцию int_func().

def int_func(text):
    return text.title()

output = []

for word in input('Слова с пробелами: ').split(' '):
    output.append(int_func(word))

print(f'Строка такая: {" ".join(output)}')
